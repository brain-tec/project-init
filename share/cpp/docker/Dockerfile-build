###############################################################################
#                                                                             #
#     Docker image to build and test the ${{VAR_PROJECT_NAME}} project
#                                                                             #
###############################################################################
FROM ubuntu:22.04

# Arguments
ARG UID=0
ARG GID=0
ARG DWORKDIR="/${{VAR_PROJECT_NAME_LOWER}}"
ARG DEBIAN_FRONTEND=noninteractive

# Environment
ENV TZ=UTC
ENV A_CMAKE_DEPENDENCY_NO_CACHE=1

# APT dependencies
RUN apt-get -y update && apt-get -y --no-install-recommends install \
 build-essential \
 wget \
 git \
 ca-certificates \
 clang-tidy \
 lcov

# Install CMake
RUN wget -q -O /opt/cmake-installer.sh \
 https://cmake.org/files/v3.27/cmake-3.27.4-linux-x86_64.sh && \
 mkdir /opt/cmake && \
 bash /opt/cmake-installer.sh --prefix=/opt/cmake --exclude-subdir && \
 ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake && \
 ln -s /opt/cmake/bin/ctest /usr/local/bin/ctest && \
 ln -s /opt/cmake/bin/cpack /usr/local/bin/cpack && \
 rm /opt/cmake-installer.sh

${{VAR_DOCKERFILE_BUILD_DOXYGEN}}

# Conditionally add regular user and his primary group.
# If both the GID and UID build arguments were specified to be non-zero,
# a separate regular user and group named 'user' are created with those IDs.
# This makes sense with non-rootless Docker, in which case using root inside
# a container is discouraged.
# However, when using rootless Docker, a separate regular user is not required
# so if GID or UID is zero, the user and group are not added.
RUN if [ $GID -ne 0 ] && [ $UID -ne 0 ]; then \
  addgroup --gid $GID user && \
  adduser --uid $UID --gid $GID --disabled-password --gecos '' user; \
 fi

# Use the user with the specified UID and GID
USER $UID:$GID

# Working directory
WORKDIR "$DWORKDIR"

# Volumes: include the entire source tree
VOLUME ["$DWORKDIR"]

ENTRYPOINT [".docker/entrypoint.sh"]

CMD ["build"]
